/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    combos {
        compatible = "zmk,combos";

        layer_3 {
            bindings = <&sl 4>;
            key-positions = <37 40>;
        };
    };

    macros {
        tmux_toggle_collapse: tmux_toggle_collapse {
            compatible = "zmk,behavior-macro";
            label = "TMUX_TOGGLE_COLLAPSE";
            #binding-cells = <0>;
            bindings = <&kp LC(S) &kp Z>;
        };
        tmux_session_switch: tmux_session_switch {
            compatible = "zmk,behavior-macro";
            label = "TMUX_SESSION_SWITCH";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LC(S) &kp F>,
                <&macro_release>,
                <&kp LC(S) &kp F>;
        };
        tmux_scroll_mode: tmux_scroll_mode {
            compatible = "zmk,behavior-macro";
            label = "TMUX_SCROLL_MODE";
            #binding-cells = <0>;
            bindings = <&kp LC(S) &kp LEFT_BRACKET>;
        };
        tmux_next_window: tmux_next_window {
            compatible = "zmk,behavior-macro";
            label = "Go to next tmux window";
            #binding-cells = <0>;
            bindings = <&kp LC(S) &kp N>;
        };
        tmux_prev_window: tmux_prev_window {
            compatible = "zmk,behavior-macro";
            label = "TMUX_PREV_WINDOW";
            #binding-cells = <0>;
            bindings = <&kp LC(S) &kp P>;
        };
    };

    behaviors {
        hm: home_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME MOD";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            global-quick-tap;
            flavor = "tap-preferred";
            quick-tap-ms = <125>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
  &kp TAB       &kp Q           &kp W         &kp E         &kp R      &kp T          &kp Y            &kp U        &kp I            &kp O                    &kp P  &kp LEFT_BRACKET
&kp LCTRL  &hm LGUI A  &hm LEFT_ALT S   &hm LCTRL D  &hm LSHIFT F      &kp G          &kp H      &hm RSHFT J  &hm RCTRL K  &hm RIGHT_ALT L  &hm RIGHT_GUI SEMICOLON           &kp SQT
&kp LSHFT       &kp Z           &kp X         &kp C         &kp V      &kp B          &kp N            &kp M    &kp COMMA          &kp DOT                 &kp FSLH           &kp ESC
                                       &lt 5 ESCAPE   &lt 4 SPACE  &lt 1 TAB    &lt 3 ENTER  &lt 2 BACKSPACE    &lt 6 DEL
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp TAB        &kp N1         &kp N2         &kp N3       &kp N4     &kp N5             &kp N6           &kp N7           &kp N8           &kp N9  &kp N0  &kp BSPC
   &trans  &kp LG(LBKT)   &kp LG(RBKT)  &kp LG(SPACE)  &kp LS(TAB)    &kp TAB           &kp LEFT         &kp DOWN           &kp UP        &kp RIGHT  &trans    &trans
&kp LSHFT     &kp LG(Z)  &kp LG(LS(Z))      &kp LG(C)    &kp LG(V)  &kp LG(K)    &rgb_ug RGB_TOG  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_EFF  &trans    &trans
                                         &kp LEFT_ALT       &trans  &kp SPACE            &kp RET           &trans         &kp RALT
            >;
        };

        num_layer {
            bindings = <
&trans  &kp LEFT_BRACKET  &kp N7   &kp N8  &kp N9  &kp RIGHT_BRACKET    &trans      &trans     &trans    &trans    &trans  &trans
&trans     &kp SEMICOLON  &kp N4   &kp N5  &kp N6          &kp EQUAL    &trans  &kp RSHIFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&trans         &kp GRAVE  &kp N1   &kp N2  &kp N3           &kp FSLH    &trans      &trans     &trans    &trans    &trans  &trans
                                  &kp DOT  &kp N0          &kp MINUS    &trans      &trans     &trans
            >;

            label = "Num";
        };

        symbol_layer {
            bindings = <
&trans  &kp LEFT_BRACE    &kp AMPERSAND          &kp ASTERISK               &kp LPAR  &kp RIGHT_BRACE    &trans      &trans     &trans    &trans    &trans  &trans
&trans       &kp COLON       &kp DOLLAR           &kp PERCENT              &kp CARET         &kp PLUS    &trans  &kp RSHIFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&trans       &kp GRAVE  &kp EXCLAMATION                &kp AT               &kp HASH         &kp PIPE    &trans      &trans     &trans    &trans    &trans  &trans
                                         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS        &kp MINUS    &trans      &trans     &trans
            >;

            label = "SYM";
        };

        util_layer {
            bindings = <
&trans       &kp C_MUTE     &kp C_VOL_DN     &kp C_VOL_UP      &kp C_PLAY_PAUSE            &kp C_NEXT    &kp F1  &kp F4  &kp F7  &trans  &trans  &bt BT_CLR
&trans     &kp C_BRI_DN     &kp C_BRI_UP           &trans  &kp LG(LS(NUMBER_4))  &kp LG(LS(NUMBER_5))    &kp F2  &kp F5  &kp F8  &trans  &trans  &bt BT_PRV
&trans  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_BRD       &rgb_ug RGB_BRI                &trans    &kp F3  &kp F6  &kp F9  &trans  &trans  &bt BT_NXT
                                                   &trans                &trans                &trans    &trans  &trans  &trans
            >;

            label = "UTIL";
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
     &kp TAB  &kp EXCL  &kp AT      &kp HASH  &kp DLLR  &kp PRCNT            &kp MINUS              &kp EQUAL             &kp GRAVE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BSPC
&kp LEFT_ALT    &trans  &trans        &trans    &trans     &trans    &tmux_scroll_mode  &tmux_toggle_collapse  &tmux_session_switch            &trans             &trans    &trans
   &kp LSHFT    &trans  &trans        &trans    &trans     &trans            &kp LC(Z)      &tmux_prev_window     &tmux_next_window     &kp BACKSLASH             &trans    &trans
                                &kp LEFT_ALT    &trans  &kp SPACE              &kp RET                 &trans              &kp RALT
            >;
        };

        fn_layer {
            bindings = <
&trans  &trans  &kp F7  &kp F8  &kp F9  &kp LS(LG(NUMBER_3))    &trans     &trans     &trans    &trans    &trans  &trans
&trans  &trans  &kp F4  &kp F5  &kp F6  &kp LS(LG(NUMBER_4))    &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&trans  &trans  &kp F1  &kp F2  &kp F3                &trans    &trans     &trans     &trans    &trans    &trans  &trans
                        &trans  &trans                &trans    &trans     &trans     &trans
            >;

            label = "Fun";
        };
    };
};
