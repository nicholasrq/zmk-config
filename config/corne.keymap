/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip {
    chain-length = <54>;
};

&caps_word {
    continue-list = <UNDERSCORE BACKSPACE DELETE LEFT_ALT RIGHT_ALT LEFT_GUI RIGHT_GUI>;
};

/ {
    combos {
        compatible = "zmk,combos";

        l_sqb {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <14 15>;
            layers = <0 1>;
        };

        l_par {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <15 16>;
            layers = <0 1>;
        };

        r_par {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <20 19>;
            layers = <0 1>;
        };

        r_sqb {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <21 20>;
            layers = <0 1>;
        };

        til {
            bindings = <&kp TILDE>;
            key-positions = <26 27>;
            layers = <0 1>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <33 32>;
            layers = <0 1>;
        };

        col {
            bindings = <&kp COLON>;
            key-positions = <2 3>;
            layers = <0 1>;
        };

        semi {
            bindings = <&kp SEMI>;
            key-positions = <8 9>;
            layers = <0 1>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <3 4>;
            layers = <0 1>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <7 8>;
            layers = <0 1>;
        };
    };

    macros {
        tm_tog_col: tm_tog_col {
            compatible = "zmk,behavior-macro";
            label = "TM_TOG_COL";
            #binding-cells = <0>;
            bindings = <&kp LC(S) &kp Z>;
        };

        tm_sess_sw: tm_sess_sw {
            compatible = "zmk,behavior-macro";
            label = "Tmux: Switch Session";
            #binding-cells = <0>;
            bindings = <&kp LC(S) &kp LS(T)>;
        };

        tm_tog_sc: tm_tog_sc {
            compatible = "zmk,behavior-macro";
            label = "TM_TOG_SC";
            #binding-cells = <0>;
            bindings = <&kp LC(S) &kp LEFT_BRACKET>;
        };

        tm_win_n: tm_win_n {
            compatible = "zmk,behavior-macro";
            label = "Go to next tmux window";
            #binding-cells = <0>;
            bindings = <&kp LC(S) &kp N>;
        };

        tm_win_p: tm_win_p {
            compatible = "zmk,behavior-macro";
            label = "TM_WIN_P";
            #binding-cells = <0>;
            bindings = <&kp LC(S) &kp P>;
        };

        tm_sess_n: tm_sess_n {
            compatible = "zmk,behavior-macro";
            label = "TM_SESS_N";
            #binding-cells = <0>;
            bindings = <&kp LC(S) &kp LEFT_PARENTHESIS>;
        };

        tm_sess_p: tm_sess_p {
            compatible = "zmk,behavior-macro";
            label = "TM_SESS_P";
            #binding-cells = <0>;
            bindings = <&kp LC(S) &kp RIGHT_PARENTHESIS>, <&macro_press>;
        };

        tog_ru: tog_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LA(LC(LG(F6)))) &to 0>;
            label = "TOG_RU";
        };

        tog_en: tog_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LA(LC(LG(F5)))) &to 1>;
            label = "TOG_EN";
        };
    };

    behaviors {
        hm_l: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MOD_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            quick-tap-ms = <175>;
            tapping-term-ms = <300>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <13 15 14 1 2 3 4 5 17 16 25 26 27 28 29 37 40>;
            require-prior-idle-ms = <150>;
        };

        cpt: cpt {
            compatible = "zmk,behavior-hold-tap";
            label = "Caps/Shift";
            bindings = <&kp>, <&caps_word>;

            #binding-cells = <2>;
            tapping-term-ms = <120>;
            flavor = "hold-preferred";
        };

        cm_tog: cm_tog {
            compatible = "zmk,behavior-tap-dance";
            label = "Colemak Toggle";
            #binding-cells = <0>;
            bindings = <&kp LG(SPACE)>, <&to 1>;
        };

        qw_tog: qw_tog {
            compatible = "zmk,behavior-tap-dance";
            label = "Qwerty Toggle";
            #binding-cells = <0>;
            bindings = <&kp LG(SPACE)>, <&to 0>;
        };

        hm_r: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            quick-tap-ms = <175>;
            tapping-term-ms = <300>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <20 21 22 6 7 8 9 10 18 19 30 31 32 33 34 37 40>;
            require-prior-idle-ms = <150>;
        };

        hm_sh: homerow_mods_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            quick-tap-ms = <120>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <19 16 1 2 3 4 5 13 14 15 16 17 25 26 27 28 29 6 7 8 9 10 18 19 20 21 22 30 31 32 33 34 40 37>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB            &kp Q         &lt 8 W           &kp E          &kp R           &kp T        &kp Y        &kp U            &kp I          &kp O         &kp P            &kp LEFT_BRACKET
&tog_en            &hm_l LGUI A  &hm_l LEFT_ALT S  &hm_l LCTRL D  &hm_sh LSHFT F  &kp G        &kp H        &hm_sh RSHFT J   &hm_r RCTRL K  &hm_r RALT L  &hm_r RGUI SEMI  &kp SQT
&cpt LEFT_SHIFT 0  &kp Z         &kp X             &kp C          &kp V           &kp B        &kp N        &kp M            &kp COMMA      &kp DOT       &kp FSLH         &kp RSHIFT
                                                   &lt 7 ESCAPE   &lt 5 SPACE     &lt 2 TAB    &lt 4 ENTER  &lt 3 BACKSPACE  &lt 6 ESCAPE
            >;
        };

        colemak {
            bindings = <
&kp TAB        &kp Q             &lt 8 W           &kp F          &kp P           &kp B        &kp J        &kp L            &kp U          &kp Y         &kp SEMI      &kp LBKT
&tog_ru        &hm_l LEFT_GUI A  &hm_l LEFT_ALT R  &hm_l LCTRL S  &hm_sh LSHFT T  &kp G        &kp M        &hm_sh RSHFT N   &hm_r RCTRL E  &hm_r RALT I  &hm_r RGUI O  &kp APOS
&cpt LSHIFT 0  &kp X             &kp C             &kp D          &kp V           &kp Z        &kp K        &kp H            &kp COMMA      &kp DOT       &kp FSLH      &kp ESCAPE
                                                   &lt 7 ESCAPE   &lt 5 SPACE     &lt 2 TAB    &lt 4 ENTER  &lt 3 BACKSPACE  &lt 6 ESCAPE
            >;

            label = "CLM";
        };

        navigation_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp LC(N1)            &kp LC(N2)             &kp LC(N3)        &kp LC(N4)  &kp LC(N5)    &kp LC(N6)  &kp LC(N7)  &kp LC(N8)  &kp LC(N9)  &kp LC(N0)  &trans
&trans  &kp LGUI              &kp LALT               &kp LEFT_CONTROL  &kp LSHFT   &trans        &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &trans      &to 1
&trans  &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)  &kp LG(C)         &kp LG(V)   &trans        &trans      &trans      &trans      &trans      &trans      &trans
                                                     &trans            &trans      &trans        &trans      &trans      &trans
            >;

            label = "Nav";
        };

        num_layer {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans    &kp LBKT   &kp N7  &kp N8  &kp N9  &kp NUMBER_0  &kp RIGHT_BRACKET
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &kp SEMI   &kp N4  &kp N5  &kp N6  &kp MINUS     &kp EQUAL
&trans  &trans    &trans    &trans     &trans     &trans    &kp GRAVE  &kp N1  &kp N2  &kp N3  &kp PERIOD    &kp FSLH
                            &trans     &trans     &trans    &trans     &trans  &trans
            >;

            label = "Num";
        };

        symbol_layer {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans    &kp LBRC   &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &kp COLON  &kp DOLLAR       &kp PRCNT     &kp CARET             &kp UNDER              &kp PLUS
&trans  &trans    &trans    &trans     &trans     &trans    &kp TILDE  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH              &kp COMMA              &kp BACKSLASH
                            &trans     &trans     &trans    &trans     &trans           &trans
            >;

            label = "Sym";
        };

        fn_layer {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans    &kp LS(LG(NUMBER_3))  &kp F7  &kp F8  &kp F9  &kp F10  &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &kp LS(LG(NUMBER_4))  &kp F4  &kp F5  &kp F6  &trans   &trans
&trans  &trans    &trans    &trans     &trans     &trans    &trans                &kp F1  &kp F2  &kp F3  &trans   &trans
                            &trans     &trans     &trans    &trans                &trans  &trans
            >;

            label = "Fun";
        };

        media_layer {
            bindings = <
&trans  &kp C_BRI_DEC  &kp C_BRI_UP  &trans  &trans  &trans    &kp C_PP         &kp C_NEXT       &kp C_VOL_DN     &kp C_VOL_UP     &kp K_MUTE  &bt BT_PRV
&trans  &trans         &trans        &trans  &trans  &trans    &trans           &trans           &trans           &trans           &trans      &bt BT_NXT
&trans  &trans         &trans        &to 1   &trans  &trans    &rgb_ug RGB_TOG  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_EFF  &trans      &bt BT_CLR
                                     &trans  &trans  &trans    &trans           &trans           &trans
            >;

            label = "Media";
        };

        tmux {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &trans     &trans  &trans  &kp PIPE     &tm_sess_n  &tm_sess_p   &trans       &trans  &trans  &trans
&trans  &trans  &kp LC(S)  &trans  &trans  &kp MINUS    &tm_tog_sc  &tm_tog_col  &tm_sess_sw  &trans  &trans  &trans
&trans  &trans  &trans     &trans  &trans  &trans       &kp LC(Z)   &tm_win_p    &tm_win_n    &trans  &trans  &trans
                           &trans  &trans  &trans       &trans      &trans       &trans
            >;

            label = "Tmux";
        };

        window_layer {
            bindings = <
&trans  &trans  &trans  &kp LS(LA(LC(LG(E))))  &kp LS(LA(LC(LG(R))))  &trans    &kp LS(LA(LC(LG(Y))))  &kp LS(LA(LC(LG(U))))  &trans                 &trans                 &trans  &trans
&trans  &trans  &trans  &trans                 &kp LS(LA(LC(LG(F))))  &trans    &kp LS(LA(LC(LG(H))))  &kp LS(LA(LC(LG(J))))  &kp LS(LA(LC(LG(K))))  &kp LS(LA(LC(LG(L))))  &trans  &trans
&trans  &trans  &trans  &trans                 &trans                 &trans    &trans                 &kp LS(LA(LC(LG(M))))  &trans                 &trans                 &trans  &trans
                        &trans                 &trans                 &trans    &trans                 &trans                 &trans
            >;

            label = "Win";
        };
    };
};
