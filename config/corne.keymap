/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#include "keys.dtsi"
#include "helper.h"

&led_strip {
    chain-length = <54>;
};

&caps_word {
    continue-list = <UNDERSCORE BSPC DELETE LALT RIGHT_ALT LGUI RIGHT_GUI>;
};

// Layers shortcuts
#define DEF 0
#define COL 1
#define NAV 2
#define NUM 3
#define SYM 4
#define FUN 5
#define MED 6
#define TMU 7
#define WIN 8

#include "combos.dtsi"

// Custom keys
#define U_CP LG(C)
#define U_CU LG(X)
#define U_PA LG(V)
#define U_UN LG(Z)
#define U_RE LS(LG(Z))

#define HYPER(key) \
  LS(LA(LC(LG(key))))

// Delays
#define QUICK_TAP_MS 175

#define MAKE_HMR(NAME, HOLD, TAP, TRIGGER_POS) \
  ZMK_BEHAVIOR(NAME, hold_tap, \
    flavor = "balanced"; \
    tapping-term-ms = <280>; \
    quick-tap-ms = <QUICK_TAP_MS>; \
    require-prior-idle-ms = <150>; \
    bindings = <HOLD>, <TAP>; \
    hold-trigger-key-positions = <TRIGGER_POS>; \
    hold-trigger-on-release; \
  )

// Home-row mods
MAKE_HMR(hmr_l, &kp, &kp, KEYS_R THUMBS)
MAKE_HMR(hmr_r, &kp, &kp, KEYS_L THUMBS)

// Macros
ZMK_BEHAVIOR(tmux_command,   macro, bindings = <&kp LC(S) &kp Z>)       // Enter tmux command mode
ZMK_BEHAVIOR(tmux_session,   macro, bindings = <&kp LC(S) &kp LS(T)>)   // Open session switcher
ZMK_BEHAVIOR(tmux_next_win,  macro, bindings = <&kp LC(S) &kp N>)       // Switch to next tmux window
ZMK_BEHAVIOR(tmux_prev_win,  macro, bindings = <&kp LC(S) &kp P>)       // Switch to prev tmux window
ZMK_BEHAVIOR(tmux_next_sess, macro, bindings = <&kp LC(S) &kp LPAR>)    // Switch to next tmux session
ZMK_BEHAVIOR(tmux_prev_sess, macro, bindings = <&kp LC(S) &kp RPAR>)    // Switch to prev tmux session
ZMK_BEHAVIOR(kb_tog_ru,      macro, bindings = <&kp HYPER(F6) &to DEF>) // Enable QWERTY and trigger OS layout switch to russian
ZMK_BEHAVIOR(kb_tog_en,      macro, bindings = <&kp HYPER(F5) &to COL>) // Enable Colemak and trigger OS layout switch to english

ZMK_LAYER(default,
&kp TAB     &kp Q         &lt WIN W         &kp E          &kp R            &kp T        &kp Y          &kp U             &kp I          &kp O         &kp P            &kp LEFT_BRACKET
&tog_en     &hmr_l LGUI A &hmr_l LALT S     &hmr_l LCTRL D &hmr_l  LSHFT F  &kp G        &kp H          &hmr_r RSHIFT J   &hmr_r RCTRL K &hmr_r RALT L &hmr_r RGUI SEMI &kp SQT
&caps_word  &kp Z         &kp X             &kp C          &kp V            &kp B        &kp N          &kp M             &kp COMMA      &kp DOT       &kp FSLH         &kp RSHIFT
                                            &lt TMU ESC    &lt FUN SPACE    &lt NAV TAB  &lt SYM ENTER  &lt NUM BSPC      &lt MED ESC
)

ZMK_LAYER(colemak,
&kp TAB     &kp Q         &lt WIN W         &kp F          &kp P            &kp B        &kp J          &kp L             &kp U          &kp Y         &kp SEMI      &kp LBKT
&tog_en     &hmr_l LGUI A &hmr_l LALT R     &hmr_l LCTRL S &hmr_l  LSHFT T  &kp G        &kp H          &hmr_r RSHIFT N   &hmr_r RCTRL E &hmr_r RALT I &hmr_r RGUI O &kp SQT
&caps_word  &kp X         &kp C             &kp D          &kp V            &kp Z        &kp K          &kp H             &kp COMMA      &kp DOT       &kp FSLH      &kp ESC
                                            &lt TMU ESC    &lt FUN SPACE    &lt NAV TAB  &lt SYM ENTER  &lt NUM BSPC      &lt MED ESC
)

ZMK_LAYER(nav,
&trans  &kp LC(N1)            &kp LC(N2)             &kp LC(N3)        &kp LC(N4)  &kp LC(N5)    &kp LC(N6)  &kp LC(N7)  &kp LC(N8)  &kp LC(N9)  &kp LC(N0)  &trans
&trans  &kp LGUI              &kp LALT               &kp LEFT_CONTROL  &kp LSHFT   &trans        &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &trans      &to 1
&trans  &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)  &kp LG(C)         &kp LG(V)   &trans        &trans      &trans      &trans      &trans      &trans      &trans
                                                     &trans            &trans      &trans        &trans      &trans      &trans
)

ZMK_LAYER(num,
&trans  &trans    &trans    &trans     &trans     &trans    &kp LBKT   &kp N7  &kp N8  &kp N9  &kp NUMBER_0  &kp RIGHT_BRACKET
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &kp SEMI   &kp N4  &kp N5  &kp N6  &kp MINUS     &kp EQUAL
&trans  &trans    &trans    &trans     &trans     &trans    &kp GRAVE  &kp N1  &kp N2  &kp N3  &kp PERIOD    &kp FSLH
                            &trans     &trans     &trans    &trans     &trans  &trans
)

ZMK_LAYER(sym,
&trans  &trans    &trans    &trans     &trans     &trans    &kp LBRC   &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &kp COLON  &kp DOLLAR       &kp PRCNT     &kp CARET             &kp UNDER              &kp PLUS
&trans  &trans    &trans    &trans     &trans     &trans    &kp TILDE  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH              &kp COMMA              &kp BACKSLASH
                            &trans     &trans     &trans    &trans     &trans           &trans
)

ZMK_LAYER(fun,
&trans  &trans    &trans    &trans     &trans     &trans    &kp LS(LG(NUMBER_3))  &kp F7  &kp F8  &kp F9  &kp F10  &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &kp LS(LG(NUMBER_4))  &kp F4  &kp F5  &kp F6  &trans   &trans
&trans  &trans    &trans    &trans     &trans     &trans    &trans                &kp F1  &kp F2  &kp F3  &trans   &trans
                            &trans     &trans     &trans    &trans                &trans  &trans
)

ZMK_LAYER(med,
&trans  &kp C_BRI_DEC  &kp C_BRI_UP  &trans  &trans  &trans    &kp C_PP         &kp C_NEXT       &kp C_VOL_DN     &kp C_VOL_UP     &kp K_MUTE  &bt BT_PRV
&trans  &trans         &trans        &trans  &trans  &trans    &trans           &trans           &trans           &trans           &trans      &bt BT_NXT
&trans  &trans         &trans        &trans  &trans  &trans    &rgb_ug RGB_TOG  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_EFF  &trans      &bt BT_CLR
                                     &trans  &trans  &trans    &trans           &trans           &trans
)

ZMK_LAYER(tmux,
&trans  &trans  &trans     &trans  &trans  &kp PIPE     &tm_sess_n  &tm_sess_p   &trans       &trans  &trans  &trans
&trans  &trans  &kp LC(S)  &trans  &trans  &kp MINUS    &tm_tog_sc  &tm_tog_col  &tm_sess_sw  &trans  &trans  &trans
&trans  &trans  &trans     &trans  &trans  &trans       &kp LC(Z)   &tm_win_p    &tm_win_n    &trans  &trans  &trans
                           &trans  &trans  &trans       &trans      &trans       &trans
)

ZMK_LAYER(win,
&trans  &trans  &trans  &kp HYPER(E)  &kp HYPER(R)  &trans    &kp HYPER(Y)  &kp HYPER(U)  &trans        &trans         &trans  &trans
&trans  &trans  &trans  &trans        &kp HYPER(F)  &trans    &kp HYPER(H)  &kp HYPER(J)  &kp HYPER(K)  &kp  HYPER(L)  &trans  &trans
&trans  &trans  &trans  &trans        &trans        &trans    &trans        &kp HYPER(M)  &trans        &trans         &trans  &trans
                        &trans        &trans        &trans    &trans        &trans        &trans
)
